name: Controllo Eventi Famiglia

on:
  schedule:
    - cron: '1 0 * * *'
  workflow_dispatch:

jobs:
  check-and-notify:
    runs-on: ubuntu-latest
    steps:
      - name: Controlla il codice del repository
        uses: actions/checkout@v4

      - name: Imposta Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Controlla eventi e invia notifica
        env:
          NTFY_TOPIC: ${{ secrets.NTFY_TOPIC }}
        run: |
          node -e '
            const fs = require("fs");
            const path = require("path");
            const { execSync } = require("child_process");

            const topic = process.env.NTFY_TOPIC;
            if (!topic) {
              console.log("Errore: Topic non trovato nei segreti.");
              process.exit(1);
            }

            const htmlPath = path.join(process.env.GITHUB_WORKSPACE, "Eventi.html");
            const htmlContent = fs.readFileSync(htmlPath, "utf8");
            const match = htmlContent.match(/const eventiData = (\[[\s\S]*?\]);/);
            if (!match) { process.exit(0); }
            
            const eventiData = JSON.parse(match[1]);

            // --- DATA DI TEST ---
            const oggi = new Date("2025-07-04");
            // --------------------

            const giornoOggi = oggi.getDate();
            const meseOggi = oggi.getMonth() + 1;

            const eventiDiOggi = eventiData.filter(evento => {
              if (!evento.Data) return false;
              const partiData = evento.Data.split("/");
              return parseInt(partiData[0], 10) === giornoOggi && parseInt(partiData[1], 10) === meseOggi;
            });

            if (eventiDiOggi.length > 0) {
              const nomiEventi = eventiDiOggi.map(e => `${e.Nominativo} (${e.Tipo.slice(0,1)})`).join(", ");
              const messaggio = `Oggi festeggiano: ${nomiEventi}`;
              const titolo = "üóìÔ∏è Promemoria Eventi Famiglia";

              // --- NUOVO METODO ROBUSTO ---
              // Il comando ora dice a curl di leggere i dati dal suo "standard input" (-d @-)
              const command = `curl -H "Title: ${titolo}" -H "Tags: cake" -H "Priority: max" -d @- ntfy.sh/${topic}`;
              
              console.log("Invio notifica con metodo standard input...");
              try {
                // Passiamo il messaggio come "input" al processo, invece di inserirlo nel comando
                const output = execSync(command, { input: messaggio }).toString();
                console.log("Risposta dal server ntfy:", output);
              } catch (error) {
                console.error("Errore durante l"invio della notifica:", error.toString());
                process.exit(1);
              }
              // --------------------------

            } else {
              console.log("Nessun evento per oggi.");
            }
          '
