name: Controllo Eventi Famiglia

on:
  schedule:
    # Esegue alle 06:00 UTC (le 08:00 del mattino in Italia)
    - cron: '0 6 * * *'
  workflow_dispatch:

jobs:
  check-and-notify:
    runs-on: ubuntu-latest
    steps:
      - name: Controlla il codice del repository
        uses: actions/checkout@v4

      - name: Imposta Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Crea ed esegui lo script di notifica
        run: |
          cat <<'EOF' > script.js
          const fs = require("fs");
          const path = require("path");
          const { execSync } = require("child_process");

          // Topic impostato direttamente per massima affidabilit√†
          const topic = "msgalternativo";

          const htmlPath = path.join(process.env.GITHUB_WORKSPACE, "Eventi.html");
          const htmlContent = fs.readFileSync(htmlPath, "utf8");
          const match = htmlContent.match(/const eventiData = (\[[\s\S]*?\]);/);
          if (!match) {
              console.log("Array eventiData non trovato nel file HTML.");
              process.exit(0);
          }
          
          const eventiData = JSON.parse(match[1]);

          // --- DATA REALE (VERSIONE FINALE) ---
          const oggi = new Date();
          // ------------------------------------

          const giornoOggi = oggi.getDate();
          const meseOggi = oggi.getMonth() + 1;

          const eventiDiOggi = eventiData.filter(evento => {
            if (!evento.Data) return false;
            const partiData = evento.Data.split("/");
            return parseInt(partiData[0], 10) === giornoOggi && parseInt(partiData[1], 10) === meseOggi;
          });

          if (eventiDiOggi.length > 0) {
            const nomiEventi = eventiDiOggi.map(e => `${e.Nominativo} (${e.Tipo.slice(0,1)})`).join(", ");
            const messaggio = `Oggi festeggiano: ${nomiEventi}`;
            const titolo = "üóìÔ∏è Promemoria Eventi Famiglia";

            const command = `curl -H "Title: ${titolo}" -H "Tags: cake" -H "Priority: max" -d @- ntfy.sh/${topic}`;
            
            console.log("Invio notifica...");
            try {
              const output = execSync(command, { input: messaggio }).toString();
              console.log("Risposta dal server ntfy:", output);
            } catch (error) {
              console.error("Errore durante l'invio della notifica:", error);
              process.exit(1);
            }
          } else {
            console.log("Nessun evento per oggi.");
          }
          EOF
          
          node script.js
